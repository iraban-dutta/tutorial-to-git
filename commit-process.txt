1-git status
    1.1-Shows the status of tracked files
    1.2-Files which have not been added show up in the untracked section

2-git diff <file-name>
    2.1-Shows the modifications in the staged files, that is the tracked files in the staging area.
    2.2-Once you add (using git add) the tracked files (to account for the modifications), git diff wont show anything!
    
3-git add <file-name>
    3.1-Used to bring files to the stage and get them ready for commit
    3.2-The files can be tracked or untracked. If tracked, there must be some modification in the file
    3.3-Run cmd: git add . -> This denotes all files in current directory (.) will be taken to stage

4-git commit
    4.1-To commit files after bringing on stage. This is equivalent to updating the version of the file in local machine.
        All the files on stage (that is those files which were brought on stage by using 'git add') will get commited.
    4.2-Always try to make seperate commits for seperate changes in repo. 
    4.3-It is NOT a good practice to bring seperate changes in the stage and then perform a single commit
    4.4-Always put a meaningful commit message.
        In Terminal message: git commit -m "Message heading" -m "Message body"
        Text Editor message: git commit (Press Enter) -> Text editor opens up -> Type message and close editor
    4.5-Run cmd: git commit --amend (To change the last commit message)
        4.5.1-Text editor opens up -> we update commit message ans save it -> close editor -> after closing editor, 
            commit message gets updated.

5-git restore --staged <file-name>
    5.1-To remove a file mistakenly taken to the stage for the process of committing

6-git restore <file-name> / git checkout <file-name>
    6.1-To unmodify a modified file in the staged area.

7-git log
    7.1-To see all the commits that were made in repo.
    7.2-These commits include every commit that has happened in the local machine and also all the commits that the online 
        version of the repo (hosted in GitHub) has.
    7.3-Run cmd: git log --oneline (To get a concise version of the log)

8-git reset <hash-id>
    8.1-Undo the commits done after the commit whose hash-id has been given above.
    8.2-Refer to documentation for different switches and it's meaning: --soft, --mixed, --hard
        Default switch: --mixed
